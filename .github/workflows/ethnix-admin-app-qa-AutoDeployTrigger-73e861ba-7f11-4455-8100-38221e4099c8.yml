name: Trigger auto deployment for ethnix-admin-app-qa

# When this action will be executed
on:
  # Automatically trigger it when detected changes in repo
  push:
    branches: 
      [ QA ]
    paths:
    - '**'
    - '.github/workflows/ethnix-admin-app-qa-AutoDeployTrigger-73e861ba-7f11-4455-8100-38221e4099c8.yml'

  # Allow manual trigger 
  workflow_dispatch:      

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions: 
      id-token: write #This is required for requesting the OIDC JWT Token
      contents: read #Required when GH token is used to authenticate with private repo

    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.ETHNIXADMINAPPQA_AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.ETHNIXADMINAPPQA_AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.ETHNIXADMINAPPQA_AZURE_SUBSCRIPTION_ID }}

      - name: Get Container Environment Variables
        id: get-env-vars
        run: |
          # Instalar jq para procesar JSON
          sudo apt-get update && sudo apt-get install -y jq
          
          # Obtener las variables de entorno del contenedor
          ENV_VARS=$(az containerapp show \
            --name ethnix-admin-app-qa \
            --resource-group ReactAPPS \
            --query 'properties.template.containers[0].env' \
            --output json)
          
          echo "Variables de entorno obtenidas:"
          echo $ENV_VARS | jq '.'
          
          # Convertir a formato de argumentos de build Docker
          BUILD_ARGS=""
          if [ "$ENV_VARS" != "null" ] && [ ! -z "$ENV_VARS" ]; then
            BUILD_ARGS=$(echo $ENV_VARS | jq -r '.[] | select(.name != null and .value != null) | "--build-arg \(.name)=\(.value)"' | tr '\n' ' ')
          fi
          
          # Si no hay variables, usar valor por defecto
          if [ -z "$BUILD_ARGS" ]; then
            BUILD_ARGS=""
          fi
          
          echo "Build arguments: $BUILD_ARGS"
          echo "build_args=$BUILD_ARGS" >> $GITHUB_OUTPUT

      - name: Build and push container image to registry
        uses: azure/container-apps-deploy-action@v2
        with:
          appSourcePath: ${{ github.workspace }}
          _dockerfilePathKey_: _dockerfilePath_
          _targetLabelKey_: _targetLabel_
          registryUrl: ethnixadminqa.azurecr.io
          registryUsername: ${{ secrets.ETHNIXADMINAPPQA_REGISTRY_USERNAME }}
          registryPassword: ${{ secrets.ETHNIXADMINAPPQA_REGISTRY_PASSWORD }}
          containerAppName: ethnix-admin-app-qa
          resourceGroup: ReactAPPS
          imageToBuild: ethnixadminqa.azurecr.io/ethnix-admin-app-qa:${{ github.sha }}
          _buildArgumentsKey_: ${{ steps.get-env-vars.outputs.build_args }}
